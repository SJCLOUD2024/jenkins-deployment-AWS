name: 3-T-AWS
on:
  workflow_dispatch:
    inputs:
      action:
        required: true
        description: 'Select the action to perform (Valid options: apply, destroy)'
env:
#   # This item has no matching transformer
#   AWS_ACCESS_KEY_ID:
#   # This item has no matching transformer
#   AWS_SECRET_ACCESS_KEY:
  AWS_DEFAULT_REGION: eu-west-2
jobs:
  Checkout:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: checkout
      uses: actions/checkout@v4.1.0
      with:
        repository: SJCLOUD2024/jenkins-deployment-AWS
  Terraform_init:
    name: Terraform init
    runs-on: windows-latest
    needs: Checkout
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: bat
      shell: cmd
      run: terraform init
  Plan:
    runs-on: windows-latest
    needs: Terraform_init
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: bat
      shell: cmd
      run: terraform plan -out tfplan
    - name: bat
      shell: cmd
      run: terraform show -no-color tfplan > tfplan.txt
  Apply_Destroy:
    name: Apply / Destroy
    runs-on: ubuntu-latest
    needs: Plan
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
#     # 'script' was not transformed because there is no suitable equivalent in GitHub Actions
#     - name: script
#       arguments:
#       - key: scriptBlock
#         value:
#           isLiteral: true
#           value: |-
#             if (params.action == 'apply') {
#                                     if (!params.autoApprove) {
#                                         def plan = readFile 'tfplan.txt'
#                                         input message: "Do you want to apply the plan?",
#                                         parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
#                                     }
#
#                                     bat "terraform ${{ inputs.action }} -input=false tfplan"
#                                 } else if (params.action == 'destroy') {
#                                     bat "terraform ${{ inputs.action }} --auto-approve"
#                                 } else {
#                                     error "Invalid action selected. Please choose either 'apply' or 'destroy'."
#                                 }
